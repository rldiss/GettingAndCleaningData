X <- X[sample(1:5),]; X$var2[c(1,3)] = NA
X
X[c(1),]
X[c(1),2]
X[c(true,false,false,false,false)]
X[c(true,false,false,false,false),]
X
X[,1]
X[,2]
X[,"var1"]
X[1:2,"var1"]
X[1:2,"var2"]
X
X[,X$var3=15]
X[,(X$var3=15)]
X[,(X$var3>=12)]
X[,(X$var3>=10)]
X$var3>=10
X$var3>=12
X$var3==12
X$var1<=3 | X$var3>15
X[(X$var1<=3 | X$var3>15),]
X
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA
X
X$var<=3 | X$var > 5
(X$var<=3 | X$var > 5)
X[(X$var<=3 | X$var > 5),]
X
X[(X$var1<=3|X$var3>15)]
X[(X$var1<=3|X$var3>15),]
X[which(X$var <= 3),]
X[(which(X$var <= 3)),]
X[(which(X$var1 <= 3)),]
X[(which(X$var2 <= 3)),]
X[(which(X$var2 <= 10)),]
sort(X$var1)
sort(X$var1,decreasing=TRUE)
sort(X$var2,na.last=TRUE)
sort(X$var2,na.last=FALSE)
X[order(X$var1),]
X[order(X$var1,X$var3),]
arrange(X,desc(var1))
library(plyr)
arrange(X,desc(var1))
X
complete.cases(X)
X[complete.cases(X)]
X[complete.cases(X),]
help("download.file")
help("setwd")
getwd()
help("download.file")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","ss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","ss06hid.csv","curl")
getwd()
help("lsdir")
list.files(".")
hid <- read.csv("ss06hid.csv")
names(hid)
agricultureLocal <- hid[hid$ACR==3]
agricultureLocal <- hid[hid$ACR==3,]
summarize(agricultureLocal)
head(agricultureLocal)
names(hid)
head(hid[which(agricultureLocal)])
head(hid[which(agricultureLocal),])
which(agricultureLocal)
agricultureLocal <- hid$SERIALNO
head(hid$SERIALNO)
head(hid$SERIALNO[hid$ACR == 3])
head(hid$SERIALNO[hid$ACR == 3])
head(hid$ACR)
head(hid$ACR[hid$ACR == 3])
hid$ACR
hid$ACR[hid$ACR==3]
head(hid$ACR[hid$ACR==3],10)
head(hid$ACR,20)
head(hid$ACR,200)
hid=complete.cases(hid)
help("complete.cases")
hid <- read.csv("ss06hid.csv")
help("data.frame")
hid2 <- hid$ACR
hid2 <- data.frame(hid$ACR)
hid2 <- hid$ACR
hid2 <- cbind(hid2,hid$AGS)
head(hid2)
cnames(hid2)
colnames(hid2)
colnames(hid2) <- c("ACR","AGS")
colnames(hid2)
agricultureLocal <- hid2[hid2$ACR==3&&hid2$AGS==6]
agricultureLocal <- hid2[hid2$ACR==3 && hid2$AGS == 6]
head(hid2$AGS)
head(hid2["AGS"])
head(head2["ACR"])
head(hid2)
hid2$ACR
agricultureLocal <- hid[hid$ACR==3]
agricultureLocal <- hid[!is.na(hid$ACR) && hid$ACR==3]
agricultureLocal <- hid[!is.na(hid$ACR) && hid$ACR==3 && !is.na(hid$AGS) && hid$AGS==3]
head(agricultureLocal)
agricultureLocal
hid[!is.na(hid$ACR)]
hid[!is.na(hid$ACR),]
hid$SERIALNO[!is.na(hid$ACR),]
hid$SERIALNO[!is.na(hid$ACR)]
agricultureLocal <- hid$SERIALNO[!is.na(hid$ACR) && hid$ACR==3 && !is.na(hid$AGS) && hid$AGS==3]
agricultureLocal
agricultureLocal <- hid$SERIALNO[!is.na(hid$ACR) && hid$ACR==3]
agricultureLocal
head(hid,1)
hid[(hid$ACR==3 && hid$AGS==3),]
which(hid[(hid$ACR==3 && hid$AGS==3),])
agricultureLocal <- hid[(hid$ACR==3 && hid$AGS==3)]
agricultureLocal
names(agricultureLocal)
hid[which(hid$ACR==3)]
hid[which(hid$ACR==3),]
head(hid[which(hid$ACR==3),],3)
head(hid[which(hid$ACR==3)&&which(hid$AGS==3),],3)
head(hid[which(hid$ACR==3 && hid$AGS==3),],3)
hid[which(hid$ACR==3 && hid$AGS==3),])
hid[which(hid$ACR==3 && hid$AGS==3),]
hid[which(hid$ACR==3 && hid$AGS==3),]
help("download.file")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","jeff.jpg","curl")
list.directory(".")
list.dir(".")
help("list"0)
help("list")
jpg <- read.jpg("jeff.jpg")
jpg <- read.jpeg("jeff.jpg")
help("jpg")
??jpg
??jpeg
library(jpeg)
install.packages("jpeg)")
install.packages("jpeg")
help("read.jpeg")
??jpeg
jpg <- readJPEG("jeff.jpg",native=TRUE)
help("readJPEG")
readJPEG??
?
;
library(jpeg)
jpg <- readJPEG("jeff.jpg",native=TRUE)
help("quantiles")
??quantiles
quantile(jpg,probs=(.3,.8),na.rm=TRUE)
quantile(jpg,probs=c(.3,.8),na.rm=TRUE)
quantile(jpg,probs=c(.3,.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","FGDP.csv","curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","Country.csv","curl")
gdp <- read.csv("FGDP.csv")
country <- read.csv("Country.csv")
names(gdp)
names(Country)
names(country)
head(gdp)
gdp <- read.csv("FGDP.csv",skip=4)
head(gdp)
head(country)
help("merge")
mgdp <- merge(gdp,country,by.x="X",by.y="CountryCode")
head(mgdp)
mgdp[1,]
is.na(gdp.X)
is.na(gdp$X)
sum(is.na(gdp$X))
sum(is.na(mgdp$X))
sum(is.na(country.ShortName$X))
sum(is.na(country$ShortName))
names(country)
sum(is.na(country$Short.Name))
sum(is.na(mgdp$Short.Name))
sum(!is.na(mgdp$Short.Name))
mgdp <- merge(gdp,country,by.x="X",by.y="CountryCode",all=TRUE)
sum(!is.na(mgdp$Short.Name))
names(mgdp)
help("summarize")
summarize(mgdp.IncomeGroup)
mgdp.IncomeGroup
mgdp["Income Group"]
mgdp$"Income Group"
names(mgdp)
mgdp$Income.Group
head(mgdp,1)
mgdp[5]
help("ave")
help("average")
??average
ave(mgdp,FUN=mean)
tapply(mgdp.X4,mgdp.Income.Group,ave)
tapply(mgdp$X4,mgdp$Income.Group,ave)
length(mgdp$X.4)
length(mgdp$Income.Group)
tapply(mgdp$X.4,mgdp$Income.Group,ave)
tapply(mgdp$X.4,mgdp$Income.Group,sum)
tapply(mgdp$X.4,mgdp$Income.Group,mean)
help("tapply")
mgdp2 <- complete.cases(mgdp)
tapply(mgdp2$X.4,mgdp2$Income.Group,mean)
names(mgdp2)
mgdp2
tapply(mgdp$X.4,mgdp$Income.Group,mean)
help("mean")
help("tapply")
tapply(mgdp$X.4,mgdp$Income.Group,mean,na.rm=TRUE)
tapply(mgdp$X.4,mgdp$Income.Group,mean,rm.na=TRUE)
help("mean")
tapply(mgdp$X.4,mgdp$Income.Group,mean,na.rm=TRUE)
gdp
mgdp$X.4
help("is.numeric")
as.numeric("..")
mgdp$NewGDP = as.numeric(mgdp$X.4)
mgdp$NewGDP
head(mgdp$NewGDP,10)
head(mgdp$X.4)
head(mgdp$X.4,10)
mgdp$X.4
mgdp[1]
mgdp$X.4[1]
mgdp$X.4[2]
mgdp$X.4[3]
mgdp$X.4[4]
help("factors")
??factor
??measure
gdp[1]
gdp[1,1]
gdp[2,1]
gdp[4,1]
gdp[5,1]
gdp[3,1]
gdp[1,4]
gdp[1,5]
gdp <- read.csv("FGDP.csv")
gdp <- read.csv("FGDP.csv",header=TRUE,skip=4)
gdp
gdp <- read.csv("fgdp.csv",header=TRUE,skip=4)
head(gdp)
colnames(gdp)
colnames(gdp) <- c("country","gdprank","","economy","usd")
colnames(gdp)
gdp[1]
gdp[,1]
head(gdp,1)
help("delete")
help("drop")
colnames(gdp)
colnames(country)
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE)
help("merge")
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE)
colnames(gdp)
head(colnames(country))
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE)
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode")
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE)
mgdp <- merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE,drop=TRUE)
gdp
country
merge(gdp,country,by.x="country",by.y="CountryCode")
merge(gdp,country,by.x="country",by.y="CountryCode",all=TRUE)
merge(gdp,country,by.x="country",by.y="CountryCode")
m <- merge(gdp,country,by.x="country",by.y="CountryCode")
gdp
gdp <- read.csv("FGDP.csv",headers=TRUE,skip=4)
gdp <- read.csv("FGDP.csv",header=TRUE,skip=4)
gdp
gdp <- read.csv("FGDP.csv",header=FALSE,skip=5)
gdp
gdp <- read.csv("FGDP.txt",header=FALSE,skip=5)
gdp
head(gdp,3)
colnames(gdp)
head(merge(gdp,country,by.x="V1",by.y="CountryCode",all=TRUE))
mgdp <- merge(gdp,country,by.x="V1",by.y="CountryCode",all=TRUE)
mgdp
sum(is.na(mgdp$CountryCode))
mgdp$ShortName
colnames(mgdp)
mgdp$Short.Name
is.na(mgdp$Short.Name)
sum(is.na(mgdp$Short.Name))
tapply(mgdp$Income.Group,mgdp$gdp,mean)
colnames(mgdp)
tapply(mgdp$Income.Group,mgdp$gdprank,mean)
length(mgdp$Income.Group)
length(mgdp$Income.V2)
length(mgdp$V2)
length(mgdp$V3)
tapply(mgdp$Income.Group,mgdp$V3,mean)
tapply(mgdp$Income.Group,mgdp$V4,mean)
tapply(mgdp$Income.Group,mgdp$V5,mean)
tapply(mgdp$Income.Group,mgdp$V5,mean,rm.na=TRUE)
tapply(mgdp$Income.Group,mgdp$V5,mean,na.rm=TRUE)
help("mean")
tapply(mgdp$Income.Group,mgdp$V4,mean,na.rm=TRUE)
tapply(mgdp$Income.Group,mgdp$V3,mean,na.rm=TRUE)
tapply(mgdp$Income.Group,mgdp$V2,mean,na.rm=TRUE)
head(mgdp)
help("tapply")
tapply(mgdp$V3,mgdp$Income.Group,mean,na.rm=TRUE)
tapply(mgdp$V4,mgdp$Income.Group,mean,na.rm=TRUE)
tapply(mgdp$V2,mgdp$Income.Group,mean,na.rm=TRUE)
tapply(mgdp$V5,mgdp$Income.Group,mean,na.rm=TRUE)
tapply(mgdp$V4,mgdp$Income.Group,mean,na.rm=TRUE)
mgdp$V4
mgdp$V3
mgdp$V5
is.numeric(mgdp$V5)
is.numeric(mgdp$V2)
mgdp$V1
mgdp$V2
tapply(mgdp$V2,mgdp$Income.Group,mean,na.rm=TRUE)
--tapply(mgdp$V2,mgdp$Income.Group,mean,na.rm=TRUE)
--tapply(mgdp$V2,mgdp$Income.Group,mean,na.rm=TRUE)
/* tapply(mgdp$V2,mgdp$Income.Group,mean,na.rm=TRUE) */
v <- mgdp$V2[mgdp$IncomeGroup=="High income: OECD"]
v
v <- mgdp$V2[mgdp$IncomeGroup=="High income: OECD"]
v <- v[is.numeric(v)]
v
mgdp <- merge(gdp,country,by.x="V1",by.y="CountryCode")
mgdp
mgdp$V2
mgdp <- merge(country,gdp,by.y="V1",by.x="CountryCode")
mgdp$V2
gdp <- read.csv("FGDP.csv",skip=5)
head(gdp,1)
gdp <- read.csv("FGDP.csv",skip=4)
head(gdp,1)
gdp[gdp$X!=""]
gdp[gdp$X!="",]
gdp2 <- gdp[gdp$X!="",]
gdp2
merge(gdp2,country,by.x="X",by.y="CountryCode")
gdp2
help("trim")
??trim
??trim
mgdp2 <- merge(gdp2,country,by.x="X",by.y="CountryCode")
help("order")
mgdp2[with(mgdp2,order(-mgdp2$X.1))]
mgdp2[order(mgdp2$X.1,descending=FALSE)]
mgdp2[order(mgdp2$X.1)]
mgdp2$X.1
is.numeric(mgdp2$X.1)
is.numeric(mgdp2$X.1[1])
is.numeric(mgdp2$X.1[2])
is.numeric(mgdp2$X.1[3])
mgdp2$X.1[1]
as.numeric(mgdp2$X.1)
mgdp2.gdprank <- as.numeric(mgdp2$X.1)
mgdp2.gdprank
mgdp2[order(mgdp2.gdprank)]
mgdp2[2]
mgdp2[2,1]
mgdp2[9,1]
mgdp2
colnames(mgdp2)
colnames(gdp)
gdp[order(gdp$X.1)]
sum(is.na(gdp$X.1))
gdp$X.1
mgdp2$X.1
mgdp2$gdprank
mgdp2[1,"gdprank"]
mgdp2[1,"X.1"]
mgdp2[1,"CountryCode"]
mgdp2[1,"X"]
mgdp2$gdprank = as.numeric(mgdp2$X.1)
mgdp2[1,"gdprank"]
mgdp2[1,"CountryCode"]
mgdp2[1,"X"]
mgdp2[1,"X.1"]
mgdp2[1,"gdprank"]
as.numeric(mgdp2[1,"X.1"])
mgdp2[1,"X.1"]
help("read.csv")
gdp <- read.csv("FGDP.csv",header=FALSE,skip=4,as.is=FALSE)
columns(gdp)
colnames(gdp)
gdp[1,"V1"]
gdp <- read.csv("FGDP.csv",header=FALSE,skip=4,colClasses=c("character"))
colnames(gdp)
gdp[1,"V1"]
gdp[2,"V1"]
gdp <- read.csv("FGDP.csv",header=FALSE,skip=4,colClasses=c("character"))
gdp <- read.csv("FGDP.csv",header=FALSE,skip=5,colClasses=c("character"))
gdp[1,]
country <- read.csv("Country.csv",header=TRUE,colClasses=c("character"))
country[1,]
mgdp <- merge(gdp,country,by.x="V1"",by.y="CountryCode")
mgdp <- merge(gdp,country,by.x="V1",by.y="CountryCode")
colnames(mgdp)
mgdp$V2
mgdp$V[210,1]
mgdp$V[210,]
mgdp$V[210,"V2"]
mgdp <- merge(gdp,country,by.x="V1",by.y="CountryCode")
mgdp$V1
mgdp$V2
mgdp$V1[210]
mgdp$V2[210]
mgdp[order(mgdp$V2)]
help("order")
mgdp[order(mgdp$V2,na.last=FALSE,decreasing=FALSE)]
sort(mgdp$V2)
sort(as.numeric(mgdp$V2))
mgdp[order(as.numeric(mgdp$V2)]
mgdp[order(as.numeric(mgdp$V2),]
mgdp
mgdp[order(mgdp$V2),]
mgdp[order(as.numeric(mgdp$V2)),]
mgdp[order(as.numeric(mgdp$V2)),]
head(mgdp[order(as.numeric(mgdp$V2)),])
head(mgdp[order(as.numeric(mgdp$V2),decreasing=TRUE),])
head(mgdp[order(as.numeric(mgdp$V2),decreasing=TRUE),],13)
mgdp$IncomeGroup
mgdp$Income.Group
help("tapply")
mgdp$V1
mgdp$V2
tapply(as.numeric(mgdp$V2),mgdp$Income.Group,mean)
tapply(as.numeric(mgdp$V2),mgdp$Income.Group,mean,na.rm=TRUE)
help("quartile")
help("quartiles")
help("quarniles")
help("quantiles")
help("quantile")
quantil(mgdp$gdprank)
mgdp$V2
as.numeric(mgdp$V2)
quantile(as.numeric(mgdp$V2),na.rm=TRUE)
as.numeric(quantile(as.numeric(mgdp$V2),na.rm=TRUE))
mgdp$gdp = as.numeric(mgdp$V2)
mgdp$V2[1:5]
mgdp$gdp[1:5]
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp))
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,na.rm=TRUE))
table(mgdp$gdpgroup)
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,probs=(.2,.4,.6,.8,1),na.rm=TRUE))
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,probs=(0.2,0.4,0.6,0.8,1),na.rm=TRUE))
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,probs=c(0.2,0.4,0.6,0.8,1),na.rm=TRUE))
table(mgdp$gdpgroup)
mgdp$gdpgroup
mgdp$V1
mgdp$V1[mgdp$gdprank==1]
mgdp$V1[mgdp$gdpgroup==1]
mgdp$gdpgroup
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,probs=c(0.2,0.4,0.6,0.8,.99),na.rm=TRUE))
mgdp$gdpgroup
mgdp$gdpgroup = cut(mgdp$gdp,breaks=quantile(mgdp$gdp,probs=c(0.2,0.4,0.6,0.8,1),na.rm=TRUE))
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
mgdp$gdpgroup = cut2(mgdp$gdp,g=5)
table(mgdp$gdpgroup)
mgdp$V1[mgdp$gdpgroup==5]
mgdp$V1[mgdp$gdpgroup=="[154,190]"]
complete.cases(mgdp$V1[mgdp$gdpgroup=="[154,190]"])
sum(!is.na(complete.cases(mgdp$V1[mgdp$gdpgroup=="[154,190]"])))
mgdp$V1[mgdp$gdpgroup=="[154,190]"]
length(mgdp$V1[mgdp$gdpgroup=="[154,190]"])
is.na(mgdp$V1[mgdp$gdpgroup=="[154,190]"]))
is.na(mgdp$V1[mgdp$gdpgroup=="[154,190]"])
sum(is.na(mgdp$V1[mgdp$gdpgroup=="[154,190]"]))
length(mgdp$gdpgroup)
mgdp$V1[1]
mgdp$gdpgroup[1]
mgdp$gdpgroup
sum(is.na(mgdp$V1[mgdp$gdpgroup=="[  1, 39)"]))
mgdp$Income.Group[mgdp$gdpgroup=="[  1, 39)"]
table(mgdp$Income.Group[mgdp$gdpgroup=="[  1, 39)"])
getwd()
setwd("./Samsung")
getwd()
list.files(".")
subj <- read.csv("subject_train.txt")
subj <- read.csv("train/subject_train.txt")
subj
subj <- read.csv("test/subject_train.txt")
subj <- read.csv("test/subject_test.txt")
subj
summarize(subj)
head(summarize)
head(subj)
help("summarize")
??summarize
summary(subj)
str(subj)
table(subj)
subj <- read.csv("train/subject_train.txt")
table(subj)
subj <- read.csv("train/subject_train.txt",colclasses=c("numeric"))
help("read.csv")
subj <- read.csv("train/subject_train.txt",colClasses=c("numeric"))
table(subj)
length(subj)
help("length")
subj
length(subj)
activity <- read.csv("train/y_train.txt", colClasses=c("numeric"))
